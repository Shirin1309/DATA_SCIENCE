{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled6.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyOAXuD/WxNxwvl5pRG4+B+M",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Shirin1309/DATA_SCIENCE/blob/main/NaiveBayes\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3Ytptjd0_zup",
        "outputId": "6bbe1c85-5108-42d7-b284-da41a7766c40"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[2 3 8 9 5 3 5 2 7 5 4 1 5 9 6 0 1 3 8 0 2 4 0 4 7 4 6 4 2 6 4 2 8 8 1 4 5\n",
            " 2 3 0 9 7 5 8 9 4 8 0 0 5 2 1 4 3 6 0 4 6 7 1 2 6 3 1 3 6 9 9 2 0 3 8 1 7\n",
            " 2 6 3 6 1 3 3 5 4 2 7 7 2 2 2 4 6 8 7 6 4 4 2 1 0 6 6 5 3 5 7 7 4 2 7 8 1\n",
            " 1 0 3 4 4 9 7 3 4 0 1 7 7 6 2 2 3 5 2 6 5 6 2 4 8 9 9 4 1 5 4 7 9 3 6 6 0\n",
            " 0 5 1 6 6 4 7 8 6 4 6 2 3 6 7 4 1 3 4 0 2 1 8 6 5 7 4 2 5 0 2 7 1 0 4 2 5\n",
            " 7 2 8 3 1 1 8 9 7 3 2 7 2 9 1 8 9 6 9 4 5 1 7 5 4 8 1 1 8 0 2 5 3 3 0 7 6\n",
            " 0 7 1 4 0 8 3 0 8 6 9 9 2 7 0 2 7 1 1 3 9 7 2 2 4 2 1 0 1 2 4 5 5 4 6 4 9\n",
            " 1 4 4 8 0 2 4 7 1 7 1 9 4 9 4 3 9 6 1 8 7 6 3 6 8 4 1 3 2 1 8 5 3 0 1 7 5\n",
            " 4 0 0 5 8 7 3 2 1 1 0 0 7 8 0 6 8 1 3 8 8 4 1 9 0 9 3 8 6 5 0 9 4 7 5 5 9\n",
            " 1 0 9 0 7 2 3 1 4 4 3 5 9 8 2 0 8 5 5 9 5 7 1 3 5 3 9 4 5 2 8 1 5 6 4 8 0\n",
            " 3 5 6 2 2 3 0 9 3 2 6 2 9 8 0 5 1 4 3 3 7 8 0 3 5 4 8 6 4 6 1 1 8 2 9 2 0\n",
            " 9 6 2 8 7 8 1 4 3 7 2 2 7 8 0 2 1 3 4 8 1 5 9 1 3 2 0 9 9 4 2 5 7 1 7 3 2\n",
            " 6 2 8 0 8 6 1 0 1 7 7 5 4 6 1 8 3 5 4 8 7 5 1 8 4 9 0 0 6 3 9 8 1 3 5 1 6\n",
            " 6 9 0 9 6 3 6 8 0 1 1 4 6 8 0 1 8 4 4 1 4 6 9 4 6 5 1 4 7 3 2 3 1 4 5 0 1\n",
            " 9 4 1 3 5 3 6 3 3 1 0 2 3 9 5 3 1 6 0 2 2 1]\n",
            "0.9907407407407407\n"
          ]
        }
      ],
      "source": [
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.datasets import load_digits\n",
        "\n",
        "\n",
        "a=load_digits()\n",
        "x=a.data\n",
        "y=a.target\n",
        "x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)\n",
        "knn=KNeighborsClassifier(n_neighbors=6)\n",
        "knn.fit(x_train,y_train)\n",
        "p=(knn.predict(x_test))\n",
        "print(p)\n",
        "#print(knn.score(x_test,y_test))"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "S2ledIHVFtf1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "GcCokimKFoeU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "M1sLCA1LFmTU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import classification_report, confusion_matrix\n",
        "print(confusion_matrix(y_test,p))\n",
        "print(classification_report(y_test,p))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ttWBYesiB-Va",
        "outputId": "14b03536-e1d9-48aa-dda7-cdb36cf9417b"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[47  0  0  0  0  0  0  0  0  0]\n",
            " [ 0 60  0  0  0  1  0  0  0  0]\n",
            " [ 0  1 49  0  0  0  0  0  0  0]\n",
            " [ 0  0  0 54  0  1  0  1  0  0]\n",
            " [ 0  0  0  0 51  0  0  1  0  0]\n",
            " [ 0  0  0  0  0 52  0  0  0  0]\n",
            " [ 0  0  0  0  0  0 58  0  0  0]\n",
            " [ 0  0  0  0  0  0  0 48  0  0]\n",
            " [ 0  4  1  0  0  0  0  0 58  0]\n",
            " [ 0  0  0  0  0  2  0  0  2 49]]\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       1.00      1.00      1.00        47\n",
            "           1       0.92      0.98      0.95        61\n",
            "           2       0.98      0.98      0.98        50\n",
            "           3       1.00      0.96      0.98        56\n",
            "           4       1.00      0.98      0.99        52\n",
            "           5       0.93      1.00      0.96        52\n",
            "           6       1.00      1.00      1.00        58\n",
            "           7       0.96      1.00      0.98        48\n",
            "           8       0.97      0.92      0.94        63\n",
            "           9       1.00      0.92      0.96        53\n",
            "\n",
            "    accuracy                           0.97       540\n",
            "   macro avg       0.98      0.98      0.98       540\n",
            "weighted avg       0.98      0.97      0.97       540\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import os\n",
        "from sklearn.naive_bayes import GaussianNB\n",
        "from sklearn.datasets import load_wine\n",
        "from sklearn import metrics\n",
        "from sklearn.model_selection import train_test_split\n",
        "a=load_wine()\n",
        "X = a.data\n",
        "y = a.target\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=3)\n",
        "gnb = GaussianNB()\n",
        "gnb.fit(X_train, y_train)\n",
        "\n",
        "y_pred = gnb.predict(X_test)\n",
        "print(\"Gaussian Naive Bayes model accuracy(in %):\", metrics.accuracy_score(y_test, y_pred)*100)\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nGd3SUTiFupz",
        "outputId": "eed23cda-45f0-4b24-e2eb-82be65597a86"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Gaussian Naive Bayes model accuracy(in %): 96.62921348314607\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "_WHjE9siVgIJ"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}